
name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies and PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build standalone binary
        run: |
          pyinstaller --onefile main.py

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-ai-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: git-ai-ubuntu-latest
          path: dist-linux/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: git-ai-windows-latest
          path: dist-windows/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: git-ai-macos-latest
          path: dist-macos/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-linux/main
          asset_name: git-ai-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-windows/main.exe
          asset_name: git-ai-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist-macos/main
          asset_name: git-ai-macos
          asset_content_type: application/octet-stream
          token: ${{ secrets.GITHUB_TOKEN }}